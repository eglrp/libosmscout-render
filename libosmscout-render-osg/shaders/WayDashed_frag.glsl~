// FRAGMENT SHADER

// notes:
// to maintain compatibility, the version
// preprocessor call needs to be added to the
// beginning of this file by the (cpu) compiler:
//
// "#version 100" for OpenGL ES 2 and
// "#version 120" (or higher) for desktop OpenGL

#ifdef GL_ES
    // the fragment shader in ES 2 doesn't have a
    // default precision qualifier for floats so
    // it needs to be explicitly specified
    precision mediump float;

    // note: highp may not be available for float types in
    // the fragment shader -- use the following to set it:
    // #ifdef GL_FRAGMENT_PRECISION_HIGH
    // precision highp float;
    // #else
    // precision mediump float;
    // #endif

    // fragment shader defaults for other types are:
    // precision mediump int;
    // precision lowp sampler2D;
    // precision lowp samplerCube;
#else
    // with default (non ES) OpenGL shaders, precision
    // qualifiers aren't used -- we explicitly set them
    // to be defined as 'nothing' so they are ignored
    #define lowp
    #define mediump
    #define highp
#endif

// varyings
varying vec2 TexCoord1;

// uniforms
uniform vec4 LineColor;
uniform vec4 DashColor;
//uniform vec2 DashData;  // [wayLength,dashSpacing]
uniform float WayLength;
uniform float DashSpacing;

void main()
{
/*
    float kMult = WayLength/DashSpacing;
    float cVal = fract(TexCoord1.y*kMult); //sin(TexCoord1.y*16.0);
    if(cVal > 0.5)
    {   gl_FragColor = LineColor;   }
    else
    {   gl_FragColor = DashColor;   }
    */
    
    vec4 fragColor = LineColor;
    float kMult = WayLength/DashSpacing;
    if(kMult > 0.0)
    {
       float cVal = fract(kMult);
       if(cVal < 0.5)
       {   fragColor = DashColor;   }
    }
    gl_FragColor = fragColor;
}

